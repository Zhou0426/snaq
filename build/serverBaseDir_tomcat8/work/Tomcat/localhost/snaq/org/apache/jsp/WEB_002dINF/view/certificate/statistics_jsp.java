/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2017-06-17 18:50:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.certificate;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class statistics_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title>证件统计</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/easyui/themes/default/easyui.css\">\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/easyui/themes/icon.css\">\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/easyui/jquery.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/easyui/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/easyui/datagrid-cellediting.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar departmentSn = \"\";\r\n");
      out.write("\t\tvar checked = true;\r\n");
      out.write("\t\tvar judgeFirst = 1;\r\n");
      out.write("\t\t//发送请求\r\n");
      out.write("\t\tfunction loadAction(){\r\n");
      out.write("\t\t\t$('#dg').datagrid('load',{\r\n");
      out.write("\t\t\t\t'departmentSn':departmentSn\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$('#department').combotree({\r\n");
      out.write("\t\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/department/treeAll.action',//'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/office/appraisals/office_loadDepartment.action',\r\n");
      out.write("\t\t\t\tvalueField : 'id',    \r\n");
      out.write("\t\t        textField : 'text',\r\n");
      out.write("\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\tqueryParams:{'resourceSn' : '1702'},\r\n");
      out.write("\t\t\t\trequired : true,\r\n");
      out.write("\t\t\t\teditable : false,\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\tpanelWidth : 300,\r\n");
      out.write("\t\t\t\tpanelHeight  :350,\r\n");
      out.write("\t\t\t\tonLoadSuccess : function(node, data){\r\n");
      out.write("\t\t\t\t\tif( judgeFirst == 1 ){\r\n");
      out.write("\t\t\t\t\t\tif( data.length != 0 ){\r\n");
      out.write("\t\t\t\t\t\t\t//将根节点的值默认输出\r\n");
      out.write("\t\t\t\t\t\t\t$('#department').combotree( 'setValue', data[0].id );\r\n");
      out.write("\t\t\t\t\t\t\tdepartmentSn = $( '#department').combotree( 'getValue' );\r\n");
      out.write("\t\t\t\t\t\t\t$('#dg').datagrid('load', {\r\n");
      out.write("\t\t\t\t\t\t\t\t'departmentSn':departmentSn\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tif(data.length == 1){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar node = $('#department').combotree('tree').tree('find', data[0].id);\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#department').combotree('tree').tree('expand', node.target);\r\n");
      out.write("\t\t\t\t        \t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tjudgeFirst++;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tonSelect:function(record){\r\n");
      out.write("\t\t\t\t\tdepartmentSn=record.id;\r\n");
      out.write("\t\t\t\t\tloadAction();\r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$('#dg').datagrid({\r\n");
      out.write("\t            url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/certificate/certificateType_showData',\r\n");
      out.write("\t            idField: 'id',\r\n");
      out.write("\t            toolbar:'#danwei',\r\n");
      out.write("\t            rownumbers: true,\t\t//显示一个行号列\r\n");
      out.write("\t            fitColumns:true,\t\t//自动适应列\r\n");
      out.write("\t           \tfit:true,\t\t\t\t//表格宽高自适应\r\n");
      out.write("\t            nowrap:false,\r\n");
      out.write("\t            striped:true,\t\t\t//斑马线效果\r\n");
      out.write("\t\t\t\tsingleSelect:true,\t\t//单行选中\r\n");
      out.write("\t            loadmsg:'请等待...',\t\t//加载等待时显示\r\n");
      out.write("\t\t\t\tclickToEdit:false,\r\n");
      out.write("\t\t\t\tdblclickToEdit:true,\r\n");
      out.write("\t            pagination:true,\t\t//显示分页组件\r\n");
      out.write("\t            pageNumber:1,\r\n");
      out.write("\t            pageSize:10,\r\n");
      out.write("\t            pageList:[5,10,15,20,25,30],\r\n");
      out.write("\t      \t\tcolumns:[[{\r\n");
      out.write("\t\t\t\t\tfield : 'certificationTypeSn',\r\n");
      out.write("\t\t\t\t\ttitle : '类型编号',\r\n");
      out.write("\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t} , {\r\n");
      out.write("\t\t\t\t\tfield : 'certificationTypeName',\r\n");
      out.write("\t\t\t\t\ttitle : '类型名称',\r\n");
      out.write("\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t} , {\r\n");
      out.write("\t\t\t\t\tfield : 'count',\r\n");
      out.write("\t\t\t\t\ttitle : '数量',\r\n");
      out.write("\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t}]],\r\n");
      out.write("\t\t\t\tonDblClickCell: function(){\r\n");
      out.write("\t\t\t\t\t $('#dg').datagrid(\"uncheckAll\");\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tonBeforeLoad:function(){\r\n");
      out.write("\t\t\t\t\t if(departmentSn==\"\" || departmentSn.length==0){\r\n");
      out.write("\t\t\t\t\t\t return false;\r\n");
      out.write("\t\t\t\t\t }else{\r\n");
      out.write("\t\t\t\t\t\t return true;\r\n");
      out.write("\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); \r\n");
      out.write("\t\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"danwei\">\r\n");
      out.write("\t\t<span>\r\n");
      out.write("\t\t\t<lable for=\"department\">选择部门：</lable>\r\n");
      out.write("\t\t\t<input id=\"department\" />\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<table id=\"dg\" ></table>\r\n");
      out.write("\t<div id=\"win\" data-options=\"collapsible:false,minimizable:false,maximizable:false,modal:true\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
